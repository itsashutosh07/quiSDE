[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.5.3:run (default-cli) > test-compile @ demo >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ demo ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 7 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.14.0:compile (default-compile) @ demo ---
[INFO] Recompiling the module because of added or removed source files.
[INFO] Compiling 34 source files with javac [debug parameters release 21] to target/classes
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/entity/Category.java:[27,21] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/entity/Question.java:[38,26] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/entity/Question.java:[41,21] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/entity/Subject.java:[33,34] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/entity/Subject.java:[37,23] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/entity/Subject.java:[41,28] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/main/java/com/quisde/dto/SubjectDto.java:[17,25] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ demo ---
[INFO] skip non existing resourceDirectory /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.14.0:testCompile (default-testCompile) @ demo ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [debug parameters release 21] to target/test-classes
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[18,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[18,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[18,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[18,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[18,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[20,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[20,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[20,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[20,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[20,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[22,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[22,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[22,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[22,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[22,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[24,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[24,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[24,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[24,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[WARNING] /Users/ashutoshmac/Work/Projects/quiSDE/backend/src/test/java/com/quisde/controller/QuizControllerTest.java:[24,6] org.springframework.boot.test.mock.mockito.MockBean in org.springframework.boot.test.mock.mockito has been deprecated and marked for removal
[INFO] 
[INFO] <<< spring-boot:3.5.3:run (default-cli) < test-compile @ demo <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.5.3:run (default-cli) @ demo ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-10-05T12:10:16.789+05:30  INFO 45324 --- [demo] [           main] com.quisde.DemoApplication               : Starting DemoApplication using Java 21.0.1 with PID 45324 (/Users/ashutoshmac/Work/Projects/quiSDE/backend/target/classes started by ashutoshmac in /Users/ashutoshmac/Work/Projects/quiSDE/backend)
2025-10-05T12:10:16.790+05:30 DEBUG 45324 --- [demo] [           main] com.quisde.DemoApplication               : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-10-05T12:10:16.790+05:30  INFO 45324 --- [demo] [           main] com.quisde.DemoApplication               : No active profile set, falling back to 1 default profile: "default"
2025-10-05T12:10:16.973+05:30  INFO 45324 --- [demo] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05T12:10:16.993+05:30  INFO 45324 --- [demo] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 7 JPA repository interfaces.
2025-10-05T12:10:17.224+05:30  INFO 45324 --- [demo] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-10-05T12:10:17.230+05:30  INFO 45324 --- [demo] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-10-05T12:10:17.230+05:30  INFO 45324 --- [demo] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-10-05T12:10:17.249+05:30  INFO 45324 --- [demo] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-10-05T12:10:17.249+05:30  INFO 45324 --- [demo] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 441 ms
2025-10-05T12:10:17.307+05:30  INFO 45324 --- [demo] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05T12:10:17.331+05:30  INFO 45324 --- [demo] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-10-05T12:10:17.343+05:30  INFO 45324 --- [demo] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-10-05T12:10:17.451+05:30  INFO 45324 --- [demo] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05T12:10:17.466+05:30  INFO 45324 --- [demo] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-05T12:10:17.581+05:30  INFO 45324 --- [demo] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-05T12:10:17.582+05:30  INFO 45324 --- [demo] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-05T12:10:17.594+05:30  WARN 45324 --- [demo] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05T12:10:17.602+05:30  INFO 45324 --- [demo] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05T12:10:18.019+05:30  INFO 45324 --- [demo] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists answers cascade 
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists flashcards cascade 
Hibernate: 
    drop table if exists questions cascade 
Hibernate: 
    drop table if exists quizzes cascade 
Hibernate: 
    drop table if exists subject_categories cascade 
Hibernate: 
    drop table if exists subjects cascade 
Hibernate: 
    create table answers (
        is_correct boolean not null,
        order_index integer not null,
        id bigint generated by default as identity,
        question_id bigint not null,
        explanation varchar(256),
        text varchar(512) not null,
        primary key (id)
    )
Hibernate: 
    create table categories (
        active boolean not null,
        id bigint generated by default as identity,
        description varchar(512),
        name varchar(255) not null unique,
        slug varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table flashcards (
        id bigint generated by default as identity,
        subject_id bigint not null,
        back_text TEXT not null,
        code_block TEXT,
        front_text TEXT not null,
        image_url varchar(255),
        primary key (id)
    )
Hibernate: 
    create table questions (
        active boolean not null,
        id bigint generated by default as identity,
        quiz_id bigint not null,
        explanation varchar(512),
        text varchar(1024) not null,
        difficulty varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table quizzes (
        num_questions integer not null,
        id bigint generated by default as identity,
        subject_id bigint not null,
        difficulty varchar(255) not null,
        slug varchar(255) not null unique,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table subject_categories (
        category_id bigint not null,
        id bigint generated by default as identity,
        subject_id bigint not null,
        primary key (id),
        unique (subject_id, category_id)
    )
Hibernate: 
    create table subjects (
        id bigint generated by default as identity,
        description varchar(1024),
        image_url varchar(255),
        name varchar(255) not null unique,
        slug varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    alter table if exists answers 
       add constraint FK3erw1a3t0r78st8ty27x6v3g1 
       foreign key (question_id) 
       references questions
Hibernate: 
    alter table if exists flashcards 
       add constraint FKbd6so99ah0kgdifafp7ltm4kk 
       foreign key (subject_id) 
       references subjects
Hibernate: 
    alter table if exists questions 
       add constraint FKn3gvco4b0kewxc0bywf1igfms 
       foreign key (quiz_id) 
       references quizzes
Hibernate: 
    alter table if exists quizzes 
       add constraint FKcblaekfu02utjnygfc3eqsgxy 
       foreign key (subject_id) 
       references subjects
Hibernate: 
    alter table if exists subject_categories 
       add constraint FK7jfuukjmefrv48m5cl717366e 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists subject_categories 
       add constraint FKcfrjke33xm7e8a1hn9ostjhvv 
       foreign key (subject_id) 
       references subjects
2025-10-05T12:10:18.043+05:30  INFO 45324 --- [demo] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05T12:10:18.193+05:30  INFO 45324 --- [demo] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05T12:10:18.423+05:30  WARN 45324 --- [demo] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-05T12:10:18.531+05:30  INFO 45324 --- [demo] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-05T12:10:18.578+05:30  INFO 45324 --- [demo] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-10-05T12:10:18.582+05:30  INFO 45324 --- [demo] [           main] com.quisde.DemoApplication               : Started DemoApplication in 1.946 seconds (process running for 2.078)
2025-10-05T12:10:45.465+05:30  INFO 45324 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05T12:10:45.465+05:30  INFO 45324 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-10-05T12:10:45.468+05:30  INFO 45324 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.image_url,
        s1_0.name,
        s1_0.slug 
    from
        subjects s1_0
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.image_url,
        s1_0.name,
        s1_0.slug 
    from
        subjects s1_0
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.image_url,
        s1_0.name,
        s1_0.slug 
    from
        subjects s1_0
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.active,
        c1_0.description,
        c1_0.name,
        c1_0.slug 
    from
        categories c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
Hibernate: 
    select
        sc1_0.id,
        sc1_0.category_id,
        sc1_0.subject_id 
    from
        subject_categories sc1_0 
    left join
        subjects s1_0 
            on s1_0.id=sc1_0.subject_id 
    where
        s1_0.id=?
